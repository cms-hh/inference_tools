stages:
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive

  PLOTS:
    value: "none"
    options:
      - "none"
      - "all"
      - "upper_limits"
      - "multiple_upper_limits"
      - "multiple_upper_limits_by_model"
      - "upper_limits_at_point"
      - "likelihood_scan"
      - "likelihood_scan_2d"
      - "multiple_likelihood_scans"
      - "multiple_likelihood_scans_2d"
      - "multiple_likelihood_scans_by_model"
      - "multiple_likelihood_scans_by_model_2d"
      - "significance_scan"
      - "multiple_significance_scans"
      - "pulls_and_impacts"
      - "exclusion_and_bestfit"
      - "exclusion_and_bestfit_2d"
      - "postfit_s_over_b"
      - "nuisance_likelihood_scans"
      - "goodness_of_fit"
      - "multiple_goodness_of_fits"
      - "eft_benchmark_limits"
      - "multiple_eft_benchmark_limits"
      - "upper_limits_c2"
      - "likelihood_scan_c2_2d"
      - "resonant_limits"
      - "multiple_resonant_limits"
      - "morphing_scales"
      - "morphed_discriminant"
      - "stat_error_scan"
      - "all_limits"
      - "all_likelihoods"
      - "all_significances"
      - "all_pulls"
      - "all_exclusions"
      - "all_postfit"
      - "all_gof"
      - "all_eft_bm"
      - "all_eft_c2"
      - "all_resonant"
      - "all_studies"
    description: "A specific plot to produce (see test.TestPlots for more info)."

  RELEASE:
    value: "cc7"
    options:
      - "cc7"
      - "el9"
    description: "The release to use."

  PARAMETERS:
    value: ""
    description: "Additional parameters to be passed to the command."

.vars_cc7:
  variables:
    DHI_CI_RELEASE: cc7
    DHI_LCG_DIR: /cvmfs/sft.cern.ch/lcg
    DHI_SCRAM_ARCH: slc7_amd64_gcc900
    DHI_CMSSW_VERSION: CMSSW_11_3_4
    DHI_COMBINE_VERSION: v9.1.0

.vars_el9:
  variables:
    DHI_CI_RELEASE: el9
    DHI_LCG_DIR: /NOTEXISTING
    DHI_SCRAM_ARCH: el9_amd64_gcc12
    DHI_CMSSW_VERSION: CMSSW_14_0_0_pre1
    DHI_COMBINE_VERSION: main
    DHI_COMBINE_VERSION_SEMVER: v9.1.0

.setup:
  stage: build
  tags:
    - cvmfs
  before_script:
    - yum install -y which
    - >
      if [ ! -d data/examplecards ]; then
        yum install -y sshpass && \
        mkdir -p data/examplecards && \
        cd data/examplecards && \
        sshpass -v -p ${KRB_PASS} scp -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch:/afs/cern.ch/user/m/mrieger/public/hh/inference/examplecards/v2.tgz cards.tgz && \
        tar -xzf cards.tgz && \
        cd ../..
      fi
    - export DHI_EXAMPLE_CARDS_BASE="${PWD}/data/examplecards"
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    policy: pull-push
    paths:
      - data/

.setup_cc7:
  extends:
    - .vars_cc7
    - .setup
  image: registry.hub.docker.com/cmssw/cc7:x86_64

.setup_el9:
  extends:
    - .vars_el9
    - .setup
  image: registry.hub.docker.com/cmssw/el9:x86_64

.compile:
  when: manual
  script:
    - bash -c "source setup.sh"
  cache:
    key: "${CI_COMMIT_REF_SLUG}-${DHI_CI_RELEASE}"
    policy: push
    paths:
      - data/

compile_cc7:
  extends:
    - .setup_cc7
    - .compile

compile_el9:
  extends: .setup_el9
  extends:
    - .setup_el9
    - .compile

lint:
  extends: .setup_cc7
  script:
    - bash -c "source setup.sh && ./lint.sh"
  cache:
    key: "${CI_COMMIT_REF_SLUG}-${DHI_CI_RELEASE}"
    policy: pull-push
    paths:
      - data/

.test:
  stage: build
  timeout: 3h
  tags:
    - cvmfs
  # image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  script:
    - export DHI_EXAMPLE_CARDS_BASE="${PWD}/data/examplecards"
    # - export DHI_LCG_DIR="/NOTEXISTING"
    - source setup.sh
    - export TEST_CMD="law run dhi.tasks.test.TestPlots --version "ci_${CI_COMMIT_SHORT_SHA}" --plots ${TEST_PLOTS} --campaign \"CI ${CI_COMMIT_SHORT_SHA}\" --file-types png,pdf ${PARAMETERS}"
    - echo "running command '${TEST_CMD}'"
    - eval "${TEST_CMD}"
    - eval "${TEST_CMD} --fetch-output 0,a,plots"
    - mkdir png
    - mv plots/*.png png
    - mkdir pdf
    - mv plots/*.pdf pdf
  cache:
    key: "${CI_COMMIT_REF_SLUG}-${DHI_CI_RELEASE}"
    policy: pull
    paths:
      - data/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$DHI_CI_RELEASE"
    paths:
      - png/*.png
      - pdf/*.pdf
    expire_in: 1 month

# test_all:
#   extends: .test
#   when: manual
#   rules:
#     - if: $PLOTS == "all"
#       when: always
#   parallel:
#     matrix:
#       - TEST_PLOTS:
#         - "all_limits"
#         - "all_likelihoods"
#         - "all_significances"
#         - "all_pulls"
#         - "all_exclusions"
#         - "all_postfit"
#         - "all_gof"
#         - "all_eft_bm"
#         - "all_eft_c2"
#         - "all_resonant"
#         - "all_studies"

.test_specific:
  extends: .test
  when: manual
  rules:
    - if: $RELEASE == $DHI_CI_RELEASE && $PLOTS != "none" && $PLOTS != "all"
      when: always
  variables:
    TEST_PLOTS: $PLOTS

test_specific_cc7:
  extends:
    - .vars_cc7
    - .test_specific

test_specific_el9:
  extends:
    - .vars_el9
    - .test_specific

build_docs_image:
  stage: build
  when: manual
  tags:
    - docker-privileged
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd docs/docker
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

deploy_docs:
  stage: build
  when: manual
  tags:
    - docker
  image: ${CI_REGISTRY_IMAGE}:latest
  environment:
    name: inference-${CI_COMMIT_REF_SLUG}
    url: ${PAGE_URL}${CI_ENVIRONMENT_SLUG}
    on_stop: delete_docs
  script:
    - test ! -z "${PAGE_ROOT}"
    - export FULL_PAGE_ROOT="${PAGE_ROOT}${CI_ENVIRONMENT_SLUG}"
    - echo "FULL_PAGE_ROOT is ${FULL_PAGE_ROOT}"
    - cd docs
    - mkdocs build
    - cd site
    - tar -czf site.tgz *
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "[ ! -d ${FULL_PAGE_ROOT} ] && mkdir ${FULL_PAGE_ROOT} || rm -rf ${FULL_PAGE_ROOT}/*"
    - sshpass -v -p ${KRB_PASS} scp -o "StrictHostKeyChecking=no" site.tgz ${KRB_USER}@lxplus.cern.ch:${FULL_PAGE_ROOT}/site.tgz
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "cd ${FULL_PAGE_ROOT}; tar -xzf site.tgz; rm site.tgz"

delete_docs:
  stage: build
  when: manual
  tags:
    - docker
  image: ${CI_REGISTRY_IMAGE}:latest
  environment:
    name: inference-${CI_COMMIT_REF_SLUG}
    action: stop
  script:
    - test ! -z "${PAGE_ROOT}"
    - export FULL_PAGE_ROOT="${PAGE_ROOT}${CI_ENVIRONMENT_SLUG}"
    - echo "FULL_PAGE_ROOT is ${FULL_PAGE_ROOT}"
    - sshpass -v -p ${KRB_PASS} ssh -o "StrictHostKeyChecking=no" ${KRB_USER}@lxplus.cern.ch "rm -rf ${FULL_PAGE_ROOT}"
